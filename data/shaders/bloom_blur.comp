#version 460
#extension GL_ARB_shading_language_include: enable
#pragma shader_stage(compute)
#include "common.glsl"

layout (set = 0, binding = 0, rgb16f) uniform image2D io_tex;
// layout (push_constant) uniform BUFFER(ShaderPushConstants, push_consts);

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

// TODO: blur image
void main() {
	vec2 resolution = imageSize(o_tex);
	vec2 uv = gl_GlobalInvocationID.xy / resolution;
	float zen = uv.x * 2.0 - 1.0;
	float alt = uv.y * push_consts.atmo_height;

	vec3 ray_start = vec3(0.0, alt + push_consts.planet_radius, 0);
	vec3 ray_dir = -normalize(vec3(sqrt(1.0 - zen * zen), zen, 0.0));
	float dst_thru_atmo = intersect_ray_sphere(vec3(0.0), push_consts.planet_radius + push_consts.atmo_height, ray_start, ray_dir).y;
	vec2 optical_depth = compute_optical_depth(ray_start, ray_dir, dst_thru_atmo);

	imageStore(io_tex, ivec2(gl_GlobalInvocationID.xy), vec4(optical_depth, 0.0, 0.0));
}
