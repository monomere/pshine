[shader("fragment")] float4 frag(
  [uniform("global"), readonly] Global global,
  [uniform("material"), readonly] Material material,
  [uniform("static_mesh"), readonly] StaticMesh mesh,
  [uniform("albedo"), readonly] sampler2D texture_albedo,
  [uniform("bump"), readonly] sampler2D texture_bump,
  [uniform("specular"), readonly] sampler2D texture_specular,
) {
  float3 local_view_dir = normalize(float3(inverse(mesh.model) * vec4(material.view_dir, 0.0)));
  float lon = atan(i_normal.z, i_normal.x) / (2.0 * PI);
  float lat = acos(i_normal.y) / PI;
  float2 texcoord = float2(lon, lat);
  float3 col = texture(texture_albedo, (texcoord)).rgb;
  float3 world_normal = normalize(float3(mesh.model * vec4(i_normal, 0.0)));
  float shadow = clamp(dot(normalize(global.sun.xyz), world_normal), 0.0, 1.0);
  float3 halfway_dir = normalize(normalize(global.sun.xyz) + material.view_dir);
  float noise_strength = 0.001;
  float spec = compute_specular_highlight(world_normal
    * mix(1.0-noise_strength, 1.0+noise_strength,
		  snoiseFractal(50.0 * i_normal)), material.smoothness);
  float spec_mask = texture(texture_specular, texcoord).r;
  return vec4((col + spec * spec_mask) * shadow, 1.0);
}
